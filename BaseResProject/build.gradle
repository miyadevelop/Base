apply plugin: 'com.android.library'
def supportVersion = "26.0.0-alpha1"

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:appcompat-v7:' + supportVersion
    compile 'com.android.support:support-v4:' + supportVersion
    compile 'com.android.support:design:' + supportVersion
    compile 'com.android.support:recyclerview-v7:' + supportVersion
    compile 'com.android.support:cardview-v7:' + supportVersion
}

android {
    compileSdkVersion 26
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.1"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            jniLibs.srcDirs = ['libs']

//            resources.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            assets.srcDirs = ['assets']
//            aidl.srcDirs = ['src']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
